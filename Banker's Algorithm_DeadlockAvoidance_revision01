//This revision shows the column setup of processes, allocation table, max column
//Also represents the algorithm to find the need column
//Available column at initial state

#include<iostream>
#include<vector>
#include<algorithm>
#include<iomanip>
using namespace std;
int main()
{
int process[5];	
int allocation[5][3];
int Max[5][3];
int need[5][3];
int available[5][3];

//for setting up the process
for(int i=1;i<=5;i++)
{
process[i] = i;
}
//ends here

//for allocation column
allocation[0][0] = 0;
allocation[0][1] = 1;
allocation[0][2] = 0;

allocation[1][0] = 2;
allocation[1][1] = 0;
allocation[1][2] = 0;

allocation[2][0] = 3;
allocation[2][1] = 0;
allocation[2][2] = 2;

allocation[3][0] = 2;
allocation[3][1] = 1;
allocation[3][2] = 1;

allocation[4][0] = 0;
allocation[4][1] = 0;
allocation[4][2] = 2;
//ends here

//for Max column
Max[0][0] = 7;
Max[0][1] = 5;
Max[0][2] = 3;

Max[1][0] = 3;
Max[1][1] = 2;
Max[1][2] = 2;

Max[2][0] = 9;
Max[2][1] = 0;
Max[2][2] = 2;

Max[3][0] = 2;
Max[3][1] = 2;
Max[3][2] = 2;

Max[4][0] = 4;
Max[4][1] = 3;
Max[4][2] = 3;
//ends here

//block to calculate Need Coloumn
for(int i=0;i<5;i++)
{for(int j=0;j<3;j++)
	{
	 need[i][j] = Max[i][j] - allocation[i][j];		
	}
}
//ends here

//block for available column
available[0][0] = 3;
available[0][1] = 3;
available[0][2] = 2;
//ends here
}//end of main
